
print('Welcome to my password manager.\n')
#pip install cryptography
#from cryptography.fernet import Fernet
#we can also write this to the file

Library = {
'Index': [1, 2],
'Service': ['Service1', 'Service2'],
'Login': ['Batman1', 'Batman2'],
'Password': ['Robin1', 'Robin2']
} 

def access_function():
  while True:
    access_pass = input('For which of below services you want to see your credentials?\nSelect by inputing index number.\n{}\n'.format(list(zip(Library['Index'],Library['Service']))))
    print("\033[A\033[A")    
    try:
      access_pass_int = int(access_pass)
    except ValueError:
      print('"{}" is an invalid input.\nPlease select an index number\n'.format(access_pass))
      continue
    if not(access_pass_int in Library['Index']):
      print('"{}" is an invalid input.\nPlease select an index number\n'.format(access_pass_int))
      continue
    else:
      break
  print('{}\n{}\n{}\n'.format(Library['Service'][access_pass_int-1],Library['Login'][access_pass_int-1],Library['Password'][access_pass_int-1]))

def add_function():
  new_Index = Library['Index']
  new_Index.append(len(Library['Index'])+1)
  Library['Index'] = new_Index

  new_Service = Library['Service']
  new_entry = input('Provide name of the Service:\n')
  print("\033[A\033[A")
  new_Service.append(new_entry)
  Library['Service'] = new_Service

  new_Login = Library['Login']
  new_entry = input('Provide name of the Login:\n')
  print("\033[A\033[A")
  new_Login.append(new_entry)
  Library['Login'] = new_Login

  new_Password = Library['Password']
  new_entry = input('Provide name of the Password:\n')
  print("\033[A\033[A")
  new_Password.append(new_entry)
  Library['Password'] = new_Password
  print(Library)  

def remove_function():
  while True:
    remove_pass = input('Which of below services credentials you want to remove?\nSelect by inputing index number.\n{}\n'.format(list(zip(Library['Index'],Library['Service']))))
    print("\033[A\033[A")    
    try:
      remove_pass_int = int(remove_pass)
    except ValueError:
      print('"{}" is an invalid input.\nPlease select an index number\n'.format(remove_pass))
      continue
    if not(remove_pass_int in Library['Index']):
      print('"{}" is an invalid input.\nPlease select an index number\n'.format(remove_pass_int))
      continue
    else:
      break
  new_Index = Library['Index']
  new_Index.remove(len(Library['Index']))
  Library['Index'] = new_Index

  new_Service = Library['Service']
  remove_entry = Library['Service'][remove_pass_int-1]
  new_Service.remove(remove_entry)
  Library['Service'] = new_Service

  new_Login = Library['Login']
  remove_entry = Library['Login'][remove_pass_int-1]
  new_Login.remove(remove_entry)
  Library['Login'] = new_Login

  new_Password = Library['Password']
  remove_entry = Library['Password'][remove_pass_int-1]
  new_Password.remove(remove_entry)
  Library['Password'] = new_Password
  print(Library)  

def program():
  while True:
    access_add_remove = input('What do you want to do?\na) Access existing credentials.\nb) Add new credentials.\nc) Remove existing credentials.\nd) Exit program\n').lower()
    print("\033[A\033[A")
    if not(access_add_remove in ('a','b','c','d')):
      print('"{}" is an invalid input.\nPlease type "a" or "b".\nTry again.\n'.format(access_add_remove))
      continue
    elif access_add_remove == 'a':
      access_function()
      continue
    elif access_add_remove == 'b':
      add_function()
      continue
    elif access_add_remove == 'c':
      remove_function()
      continue
    elif access_add_remove == 'd':
      quit()


try:
  my_input = input('Please provide the master password\n')
  if my_input == 'banana':
    program()
  else:
    print('Wrong password!')
    quit()
except:
  pass
